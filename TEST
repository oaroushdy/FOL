TESTING:

 Test each Step independently:
- Step 1: remove iff:
	 Sentence with iff : (a V b) <=> (c AND D)
	 Sentence without iff

- Step 2: RemoveIF():
	 Sentence with iff 
	 Sentence without iff 
	
- Test all equals() : atoms, blocks of atoms
	
 Function:
ex: a iff b
Expression exp = new Sentence ( new Variable ("a"), Connector.IFF, new variable ("b"));
exp.Step1RemoveIFF();
System.out.println(exp);



 Unifier:
E1 = [ a, b, c]
first(E1) = a, Rest(E1)= [b,c]
first(Rest(E1)) = b, Rest(Rest(E1))=c;
E2 = [ b, v, z]

function UNIFY-VAR(E1, E2, µ)
// returns a substitution , the substitution built up so far
	inputs: Variable E1,
			Atom E2,
			µ is subset;
		
	if (E1/val € µ )
		then return UNIFY(val, x, µ)
	else if (E2/val € µ )
		then return UNIFY(E1, val, µ)
		else if E1 occurs in E2
			then return null;
			else return µ.add(E2/E1)
			
			
Tested:

		ArrayList<Variable> out = new ArrayList<>();
		Variable x = new Variable("x");
		Variable y = new Variable("y");
		out.add(x);
		out.add(y);
		
		ArrayList<Variable> out22 = new ArrayList<>();
		Variable xs = new Variable("cos");
		out22.add(xs);
		
		ArrayList<Variable> out2 = clone.deepClone(out);

		Predicate fx = new Predicate("f", new Atom[] { x, y });
		Predicate fxx = new Predicate("f", fx);

		Variable sex= new Variable("cos");

		Predicate fx2 = new Predicate("f", new Atom[] { sex });

		Predicate fxx2 = new Predicate("f", fx2);
		Sentence right2 = new EQuantifier(fxx2, out22);
		Sentence f2 = new EQuantifier(right2, out);

		
		Sentence right = new EQuantifier(f2, out2);
		Sentence in = new Sentence(fxx, Connector.AND,right);
		Sentence f = new EQuantifier(in, out);
		
=================================================================
Report 1: 
		E:x[P(x) & A:x[Q(x) => !P(x)]]
		clone = new Cloner();

		Variable x = new Variable("x");
		Predicate p = new Predicate("P", x);
		Predicate p2 = new Predicate("P", x, true);
		Predicate q = new Predicate("Q", x);

		Sentence in = new Sentence(q, Connector.IF, p2);
		Quantifier a = new AQuantifier(in, x);
		Sentence out = new Sentence(p, Connector.AND, a);

		Sentence f = new EQuantifier(out, x);
		ClauseForm(f, true);

